# Generated by Django 5.1.3 on 2024-11-20 13:57

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AiModels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('diagnostic_methods', models.TextField(blank=True, null=True)),
                ('treatment', models.TextField(blank=True, null=True)),
                ('recommendations', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HealthData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bp_diastolic', models.FloatField(blank=True, null=True)),
                ('bp_limit', models.CharField(blank=True, max_length=100, null=True)),
                ('sg', models.FloatField(blank=True, null=True)),
                ('al', models.CharField(blank=True, max_length=100, null=True)),
                ('class_value', models.CharField(blank=True, max_length=100, null=True)),
                ('rbc', models.CharField(blank=True, max_length=100, null=True)),
                ('su', models.CharField(blank=True, max_length=100, null=True)),
                ('pc', models.CharField(blank=True, max_length=100, null=True)),
                ('pcc', models.CharField(blank=True, max_length=100, null=True)),
                ('ba', models.CharField(blank=True, max_length=100, null=True)),
                ('bgr', models.FloatField(blank=True, null=True)),
                ('bu', models.FloatField(blank=True, null=True)),
                ('sod', models.FloatField(blank=True, null=True)),
                ('sc', models.FloatField(blank=True, null=True)),
                ('pot', models.FloatField(blank=True, null=True)),
                ('hemo', models.FloatField(blank=True, null=True)),
                ('pcv', models.FloatField(blank=True, null=True)),
                ('rbcc', models.FloatField(blank=True, null=True)),
                ('wbcc', models.FloatField(blank=True, null=True)),
                ('htn', models.CharField(blank=True, max_length=100, null=True)),
                ('dm', models.CharField(blank=True, max_length=100, null=True)),
                ('cad', models.CharField(blank=True, max_length=100, null=True)),
                ('appet', models.CharField(blank=True, max_length=100, null=True)),
                ('pe', models.CharField(blank=True, max_length=100, null=True)),
                ('ane', models.CharField(blank=True, max_length=100, null=True)),
                ('grf', models.CharField(blank=True, max_length=100, null=True)),
                ('stage', models.CharField(blank=True, max_length=100, null=True)),
                ('affected', models.CharField(blank=True, max_length=100, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('sex', models.CharField(choices=[('m', 'Male'), ('f', 'Female')], default='f', max_length=1)),
                ('glucose', models.FloatField(default=50)),
                ('cholesterol', models.FloatField(default=50)),
                ('hemoglobin', models.FloatField(default=50)),
                ('heart_disease', models.CharField(blank=True, max_length=255, null=True)),
                ('diabetes', models.CharField(blank=True, max_length=255, null=True)),
                ('diabetes_boolean', models.BooleanField(default=False)),
                ('diagnosis', models.CharField(blank=True, max_length=255, null=True)),
                ('additional_field', models.CharField(blank=True, max_length=255, null=True)),
                ('cp', models.IntegerField()),
                ('trestbps', models.FloatField(default=50)),
                ('chol', models.FloatField(default=50)),
                ('fbs', models.IntegerField(default=0)),
                ('restecg', models.IntegerField()),
                ('thalachh', models.FloatField(default=50)),
                ('exang', models.IntegerField(default=0)),
                ('oldpeak', models.FloatField(default=50)),
                ('slope', models.IntegerField()),
                ('ca', models.IntegerField(default=0)),
                ('thal', models.IntegerField()),
                ('target', models.IntegerField(default=50)),
            ],
        ),
        migrations.CreateModel(
            name='ImportedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=255, unique=True)),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('file_data', models.FileField(upload_to='uploads/')),
                ('file_type', models.CharField(blank=True, choices=[('csv', 'CSV'), ('excel', 'Excel')], max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MedicalAdviceFollowUp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('advice', models.TextField()),
                ('follow_up_date', models.DateTimeField()),
                ('patient_instructions', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='MedicalProcedure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('procedure_date', models.DateTimeField()),
                ('responsible_doctor', models.CharField(max_length=255)),
                ('procedure_details', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Symptom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UploadedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='uploads/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='XRayTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_type', models.CharField(max_length=100)),
                ('test_date', models.DateTimeField()),
                ('results', models.TextField()),
                ('attachment', models.FileField(upload_to='xray_tests/')),
            ],
        ),
        migrations.CreateModel(
            name='EmailAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_addresses', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symptoms_entered', models.TextField()),
                ('diagnostic_methods_used', models.TextField()),
                ('final_diagnosis', models.CharField(max_length=255)),
                ('patient_advice', models.TextField()),
                ('disease', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='health.disease')),
                ('health_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnoses', to='health.healthdata')),
            ],
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('dosage', models.CharField(max_length=100)),
                ('side_effects', models.TextField()),
                ('treatment_duration', models.CharField(max_length=100)),
                ('usage_instructions', models.TextField()),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='health.disease')),
            ],
        ),
        migrations.CreateModel(
            name='DiseaseSymptom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('severity', models.CharField(choices=[('mild', 'Mild'), ('moderate', 'Moderate'), ('severe', 'Severe')], max_length=50)),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='health.disease')),
                ('symptom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='health.symptom')),
            ],
        ),
        migrations.AddField(
            model_name='disease',
            name='symptoms',
            field=models.ManyToManyField(related_name='diseases', to='health.symptom'),
        ),
    ]
